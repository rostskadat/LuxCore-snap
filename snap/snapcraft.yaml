name: luxcore
base: core22
version: git
issues: https://github.com/rostskadat/LuxCore-snap/issues
website: https://luxcorerender.org/
summary: A physically based and unbiased rendering engine
description: |
  LuxCoreRender is a physically based and unbiased rendering engine. Based on
  state of the art algorithms, LuxCoreRender simulates the flow of light
  according to physical equations, thus producing realistic images of
  photographic quality.

  Commands:
    luxcore.luxcoreui: Run luxcoreui
    luxcore.luxcoreconsole: Run luxcoreconsole

grade: devel
confinement: strict
compression: lzo
license: LGPL-2.0-or-later
architectures:
  - build-on: [amd64]

apps:
  luxcoreui:
    command: usr/bin/luxcoreui
    plugs: &plugs
      - opengl
      - x11
  luxcoreconsole:
    command: usr/bin/luxcoreconsole
    plugs: *plugs

parts:
  # There are no distribution package for OIDIN. We use a precompiled version
  # We should use
  # $(dpkg-architecture --query DEB_TARGET_GNU_CPU)
  # $(dpkg-architecture --query DEB_TARGET_ARCH_OS)
  # to get 'x86_64' and 'linux'
  oidin:
    plugin: dump
    source: https://github.com/OpenImageDenoise/oidn/releases/download/v2.1.0/oidn-2.1.0.x86_64.linux.tar.gz
    source-type: tar
    stage:
      - include
      - lib/cmake
      - lib/libOpenImageDenoise*

  # This part builds LuxCore and reproduce the custom script available at
  # https://wiki.luxcorerender.org/Compiling_LuxCore#Linux. However
  # distribution package are prefered as well as generating dynamically linked
  # executables.
  luxcore:
    after: [oidin]
    plugin: cmake
    source: https://github.com/LuxCoreRender/LuxCore.git
    build-packages:
      - bison
      - doxygen
      - flex
      - g++
      - git
      - libblosc-dev
      - libboost-all-dev
      - libbz2-dev
      - libembree-dev
      - libgl1-mesa-dev
      - libgtk-3-dev
      - libopencolorio-dev
      - libopenexr-dev
      - libopenimageio-dev
      # - core20: libopenvdb-dev
      - libpng-dev
      - libtbb2-dev # core20: libtbb-dev / version 2020.3-1
      - libtiff5-dev
      - python3-dev
      - python3-pip
    stage-packages:
      # We can obtain the list of snap package with:
      # readelf --wide --dynamic luxcore |grep 'Shared library'|sed -E 's/.*\[(.*)]$/\1/'|xargs dpkg -S|cut -d: -f1|sort -u
      - libblosc1
      - libboost-chrono1.74.0
      - libboost-filesystem1.74.0
      - libboost-iostreams1.74.0
      - libboost-regex1.74.0
      - libboost-serialization1.74.0
      - libboost-thread1.74.0
      - libc6
      - libembree3-3
      - libgcc-s1
      - libgl1
      - libglib2.0-0
      - libglib2.0-dev
      - libgomp1
      - libgtk-3-0
      - libilmbase25
      - libopenimageio2.2
      - libstdc++6
      - libtbb2 # core20: libtbb / version 2020.3-1
      - libx11-6
      - libxcursor1
      - libxi6
      - libxinerama1
      - libxrandr2
      - zlib1g
    override-pull: |
      craftctl default
      # Adding missing include in boost serialization library
      patch --forward --directory=/ --strip=0 --input=$CRAFT_PROJECT_DIR/snap/local/patches/patch_001.patch || true
      # Missing conversion in spdlog library
      patch --forward --directory=$CRAFT_PART_SRC --strip=0 --input=$CRAFT_PROJECT_DIR/snap/local/patches/patch_002.patch || true
      # Makes sure to use dynamic library instead of static library.
      # Required to get the pyluxcore to link when libboost_thread is not recompilable.
      # patch --forward --directory=$CRAFT_PART_SRC --strip=0 --input=$CRAFT_PROJECT_DIR/snap/local/patches/patch_003.patch || true
    override-build: |
      set -eux
      # Since there is no install target the default build fails :(
      # We reproduce the build command found in the LinuxCompile project at
      # REF: https://github.com/LuxCoreRender/LinuxCompile.git/build
      cmake -G "Unix Makefiles" -Wno-dev \
        -DCMAKE_PREFIX_PATH=/usr/lib/$CRAFT_ARCH_TRIPLET:/usr/include/$CRAFT_ARCH_TRIPLET \
        -DOIDN_SEARCH_PATH=$CRAFT_STAGE \
        $CRAFT_PART_SRC
      cmake --build $CRAFT_PART_BUILD --target luxcoreui -- -j2
      cmake --build $CRAFT_PART_BUILD --target luxcoreconsole -- -j2
      [ -d $CRAFT_PART_INSTALL/usr/bin ] || mkdir $CRAFT_PART_INSTALL/usr/bin
      cp -f $CRAFT_PART_BUILD/bin/luxcoreui $CRAFT_PART_INSTALL/usr/bin/luxcoreui
      cp -f $CRAFT_PART_BUILD/bin/luxcoreconsole $CRAFT_PART_INSTALL/usr/bin/luxcoreconsole
