name: luxcore
base: core22
adopt-info: luxcore
version: 0.0.1
issues: https://github.com/rostskadat/LuxCore-snap/issues
website: https://luxcorerender.org/
summary: A physically based and unbiased rendering engine
description: |
  LuxCoreRender is a physically based and unbiased rendering engine. Based on
  state of the art algorithms, LuxCoreRender simulates the flow of light 
  according to physical equations, thus producing realistic images of 
  photographic quality.

  Commands:
    luxcore.luxcoreui: Run luxcoreui
    luxcore.luxcoreconsole: Run luxcoreconsole

grade: devel
confinement: strict
compression: lzo
license: LGPL-2.0-or-later

# layout:
#   /usr/share/X11:
#     symlink: $SNAP/kf5/usr/share/X11
#   /usr/share/libdrm/amdgpu.ids:
#     bind-file: $SNAP/kf5/usr/share/libdrm/amdgpu.ids
#   /usr/bin/mpirun: # ElmerSolver_mpi
#     symlink: $SNAP/usr/bin/orterun
#   /usr/share/openmpi:
#     symlink: $SNAP/usr/share/openmpi
#   /etc/openmpi:
#     bind: $SNAP/etc/openmpi
#   /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/openmpi:
#     bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/openmpi
#   /usr/bin/orted:
#     symlink: $SNAP/usr/bin/orted
#   /usr/share/pmix:
#     symlink: $SNAP/usr/share/pmix
#   /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pmix:
#     symlink: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pmix
#   /etc/matplotlibrc:
#     bind-file: $SNAP/etc/matplotlibrc
#   /usr/share/matplotlib:
#     symlink: $SNAP/usr/share/matplotlib
#   /usr/share/qt5:
#     symlink: $SNAP/kf5/usr/share/qt5
#   /usr/bin/dot: # Graphviz for dependency graph
#     symlink: $SNAP/usr/bin/dot
#   /usr/bin/unflatten: # Graphviz for dependency graph
#     symlink: $SNAP/usr/bin/unflatten
#   /usr/share/povray-3.7: # Raytracing
#     symlink: $SNAP/usr/share/povray-3.7

environment:
  LD_LIBRARY_PATH: "$SNAP/usr/lib/:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/:$LD_LIBRARY_PATH"
  GIT_EXEC_PATH: $SNAP/usr/lib/git-core
  GIT_TEMPLATE_DIR: $SNAP/usr/share/git-core/templates
  GIT_CONFIG_NOSYSTEM: 1
  PIP_USER: 1

apps:
  luxcoreui:
    command: usr/bin/luxcoreui
    plugs: &plugs
      - opengl
  luxcoreconsole:
    command: usr/bin/luxcoreconsole
    plugs: *plugs

parts:

  # There are no distribution package for OIDIN. We use a precompiled version
  oidin:
    plugin: dump
    source: https://github.com/OpenImageDenoise/oidn/releases/download/v2.1.0/oidn-2.1.0.x86_64.linux.tar.gz
    source-type: tar

  # This part builds LuxCore and reproduce the custom script available at
  # https://wiki.luxcorerender.org/Compiling_LuxCore#Linux. However 
  # distribution package are prefered as well as generating dynamically linked
  # executables.
  luxcore:
    after: [oidin]
    plugin: cmake
    source: https://github.com/LuxCoreRender/LuxCore.git
    cmake-parameters:
      - -DCMAKE_PREFIX_PATH=/usr/lib/$SNAPCRAFT_ARCH_TRIPLET:/usr/include/$SNAPCRAFT_ARCH_TRIPLET
      - -DOIDN_INCLUDE_PATH:PATH=/root/parts/oidin/src/include
      - -DOIDN_LIBRARY:FILEPATH=/root/parts/oidin/src/lib/libOpenImageDenoise.so
      - -Wno-dev
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DPYTHON_EXECUTABLE=/usr/bin/python3
      - -DPYTHON_INCLUDE_DIR:PATH=/usr/include/python3.10
      - -DPYTHON_LIBRARY:FILEPATH=/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libpython3.10.so
    build-packages:
      - bison
      - doxygen
      - flex
      - g++
      - git
      - libblosc-dev
      - libboost-all-dev
      - libbz2-dev
      - libembree-dev
      - libgl1-mesa-dev
      - libgtk-3-dev
      - libopencolorio-dev
      - libopenexr-dev
      - libopenimageio-dev
      # - core20: libopenvdb-dev
      - libpng-dev
      - libtbb2-dev # core20: libtbb-dev / version 2020.3-1
      - libtiff5-dev
      - python3-dev
      - python3-pip
    stage-packages:
      - libblosc1
      - libembree3-3
      - libopencolorio1v5
      - libopenexr25 # core20: libopenexr24
      - libopenvdb8.1 # core20: libopenvdb6.2
      - libtbb2 # core20: libtbb / version 2020.3-1
      - python3-pyopencolorio
    override-pull: |
      craftctl default
      # No failure as it might have already been applied...
      # Adding missing include in boost serialization library
      patch --forward --directory=/ --strip=0 --input=$SNAPCRAFT_PROJECT_DIR/snap/local/patches/patch_001.patch || true
      # Missing conversion in spdlog library
      patch --forward --directory=/ --strip=0 --input=$SNAPCRAFT_PROJECT_DIR/snap/local/patches/patch_002.patch || true
      # Makes sure to use dynamic library instead of static library.
      # Required to get the pyluxcore to link when libboost_thread is not recompilable.
      patch --forward --directory=/ --strip=0 --input=$SNAPCRAFT_PROJECT_DIR/snap/local/patches/patch_003.patch || true
      craftctl set version=$(git describe --tags --abbrev=10)
    override-build: |
      # Since there is no install target the default build fails :(
      #sed -i -e 's/^DESTDIR=\(.*install\)/#DESTDIR=\1/' $SNAPCRAFT_PART_BUILD/../run/build.sh
      #craftctl default
      # We need to reproduce the whole build command found at
      # REF: https://github.com/LuxCoreRender/LinuxCompile.git/build
      cmake -G "Unix Makefiles" -Wno-dev \
        -DCMAKE_PREFIX_PATH=/usr/lib/$SNAPCRAFT_ARCH_TRIPLET:/usr/include/$SNAPCRAFT_ARCH_TRIPLET \
        -DOIDN_INCLUDE_PATH:PATH=/root/parts/oidin/src/include \
        -DOIDN_LIBRARY:FILEPATH=/root/parts/oidin/src/lib/libOpenImageDenoise.so \
        -Wno-dev \
        -DCMAKE_INSTALL_PREFIX:PATH=/usr \
        -DCMAKE_BUILD_TYPE=Release \
        -DPYTHON_INCLUDE_DIR:PATH=/usr/include/python3.10 \
        -DPYTHON_LIBRARY:FILEPATH=/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libpython3.10.so \
        $SNAPCRAFT_PART_SRC
      cmake --build $SNAPCRAFT_PART_BUILD -- -j3
